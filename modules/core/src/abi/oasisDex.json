[
  "function matchingEnabled() view returns (bool)",
  "function getBestOffer(address sell_gem, address buy_gem) view returns (uint256)",
  "function sellAllAmount(address pay_gem, uint256 pay_amt, address buy_gem, uint256 min_fill_amount) returns (uint256 fill_amt)",
  "function stop()",
  "function make(address pay_gem, address buy_gem, uint128 pay_amt, uint128 buy_amt) returns (bytes32)",
  "function setOwner(address owner_)",
  "function getBuyAmount(address buy_gem, address pay_gem, uint256 pay_amt) view returns (uint256 fill_amt)",
  "function addTokenPairWhitelist(address baseToken, address quoteToken) returns (bool)",
  "function remTokenPairWhitelist(address baseToken, address quoteToken) returns (bool)",
  "function insert(uint256 id, uint256 pos) returns (bool)",
  "function last_offer_id() view returns (uint256)",
  "function setMatchingEnabled(bool matchingEnabled_) returns (bool)",
  "function cancel(uint256 id) returns (bool success)",
  "function getOffer(uint256 id) view returns (uint256, address, uint256, address)",
  "function del_rank(uint256 id) returns (bool)",
  "function take(bytes32 id, uint128 maxTakeAmount)",
  "function getMinSell(address pay_gem) view returns (uint256)",
  "function getTime() view returns (uint64)",
  "function getNextUnsortedOffer(uint256 id) view returns (uint256)",
  "function close_time() view returns (uint64)",
  "function _span(address, address) view returns (uint256)",
  "function _best(address, address) view returns (uint256)",
  "function stopped() view returns (bool)",
  "function bump(bytes32 id_)",
  "function setAuthority(address authority_)",
  "function getOfferCount(address sell_gem, address buy_gem) view returns (uint256)",
  "function buyAllAmount(address buy_gem, uint256 buy_amt, address pay_gem, uint256 max_fill_amount) returns (uint256 fill_amt)",
  "function isActive(uint256 id) view returns (bool active)",
  "function offers(uint256) view returns (uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem, address owner, uint64 timestamp)",
  "function getFirstUnsortedOffer() view returns (uint256)",
  "function isTokenPairWhitelisted(address baseToken, address quoteToken) view returns (bool)",
  "function owner() view returns (address)",
  "function getBetterOffer(uint256 id) view returns (uint256)",
  "function _dust(address) view returns (uint256)",
  "function getWorseOffer(uint256 id) view returns (uint256)",
  "function _menu(bytes32) view returns (bool)",
  "function _near(uint256) view returns (uint256)",
  "function kill(bytes32 id)",
  "function setMinSell(address pay_gem, uint256 dust) returns (bool)",
  "function authority() view returns (address)",
  "function isClosed() view returns (bool closed)",
  "function _rank(uint256) view returns (uint256 next, uint256 prev, uint256 delb)",
  "function getOwner(uint256 id) view returns (address owner)",
  "function isOfferSorted(uint256 id) view returns (bool)",
  "function setBuyEnabled(bool buyEnabled_) returns (bool)",
  "function buy(uint256 id, uint256 amount) returns (bool)",
  "function offer(uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem, uint256 pos, bool rounding) returns (uint256)",
  "function buyEnabled() view returns (bool)",
  "function getPayAmount(address pay_gem, address buy_gem, uint256 buy_amt) view returns (uint256 fill_amt)",
  "event LogNote(bytes4 indexed sig, address indexed guy, bytes32 indexed foo, bytes32 indexed bar, uint256 wad, bytes fax) anonymous",
  "event LogItemUpdate(uint256 id)",
  "event LogTrade(uint256 pay_amt, address indexed pay_gem, uint256 buy_amt, address indexed buy_gem)",
  "event LogMake(bytes32 indexed id, bytes32 indexed pair, address indexed maker, address pay_gem, address buy_gem, uint128 pay_amt, uint128 buy_amt, uint64 timestamp)",
  "event LogBump(bytes32 indexed id, bytes32 indexed pair, address indexed maker, address pay_gem, address buy_gem, uint128 pay_amt, uint128 buy_amt, uint64 timestamp)",
  "event LogTake(bytes32 id, bytes32 indexed pair, address indexed maker, address pay_gem, address buy_gem, address indexed taker, uint128 take_amt, uint128 give_amt, uint64 timestamp)",
  "event LogKill(bytes32 indexed id, bytes32 indexed pair, address indexed maker, address pay_gem, address buy_gem, uint128 pay_amt, uint128 buy_amt, uint64 timestamp)",
  "event LogSetAuthority(address indexed authority)",
  "event LogSetOwner(address indexed owner)",
  "event LogBuyEnabled(bool isEnabled)",
  "event LogMinSell(address pay_gem, uint256 min_amount)",
  "event LogMatchingEnabled(bool isEnabled)",
  "event LogUnsortedOffer(uint256 id)",
  "event LogSortedOffer(uint256 id)",
  "event LogAddTokenPairWhitelist(address baseToken, address quoteToken)",
  "event LogRemTokenPairWhitelist(address baseToken, address quoteToken)",
  "event LogInsert(address keeper, uint256 id)",
  "event LogDelete(address keeper, uint256 id)"
]
